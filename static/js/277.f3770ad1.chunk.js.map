{"version":3,"file":"static/js/277.f3770ad1.chunk.js","mappings":"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","sources":["webpack://social-app/./src/components/Messages/Message.module.css?c069","webpack://social-app/./src/components/Messages/ContactItem/ContactItem.module.css?7007","components/Messages/ContactItem/ContactItem.jsx","webpack://social-app/./src/components/Messages/DialogItem/DialogItem.module.css?ca70","components/Messages/DialogItem/DialogItem.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Message_container__C7uaA\",\"body\":\"Message_body__VqTiJ\",\"contacts_list\":\"Message_contacts_list__ETpRc\",\"contacts_item\":\"Message_contacts_item__GYeAX\",\"pustoyContact\":\"Message_pustoyContact__eWtBp\",\"pustoyMessage\":\"Message_pustoyMessage__sIw1N\",\"contacts_img\":\"Message_contacts_img__urppN\",\"contacts_content\":\"Message_contacts_content__by7Um\",\"contacts_name\":\"Message_contacts_name__+04PU\",\"contacts_shortDescription\":\"Message_contacts_shortDescription__gMZva\",\"dialog_list\":\"Message_dialog_list__mef03\",\"send_body\":\"Message_send_body__XRI-Y\",\"textarea\":\"Message_textarea__FNK-L\"};","// extracted by mini-css-extract-plugin\nexport default {\"contacts_item\":\"ContactItem_contacts_item__ak1kQ\",\"contacts_img\":\"ContactItem_contacts_img__y6H9P\",\"contacts_content\":\"ContactItem_contacts_content__x047T\",\"contacts_name\":\"ContactItem_contacts_name__EnTdP\",\"contacts_shortDescription\":\"ContactItem_contacts_shortDescription__oVYbx\",\"active\":\"ContactItem_active__2Y3SP\"};","import React from \"react\";\r\nimport c from \"./ContactItem.module.css\"\r\nimport pustoy from \"./../../../accets/images/pustoyprofile.jpg\"\r\nconst ContactItem = ({id,src,name,shortdesctiption, setUserInfo,isActive}) => {\r\n  return (\r\n    <div className={isActive===id?c.contacts_item +\" \"+c.active:c.contacts_item} onClick={()=>setUserInfo(id,src)}>\r\n      <div className={c.contacts_img}>\r\n        <img src={src?src:pustoy} alt=\"ava\" />\r\n      </div>\r\n      <div  className={c.contacts_content}>\r\n        <p className={c.contacts_name}>{name}</p>\r\n        <p className={c.contacts_shortDescription}>{shortdesctiption}</p>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ContactItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog_item\":\"DialogItem_dialog_item__xRhS+\",\"dialog_reverce\":\"DialogItem_dialog_reverce__57DKq\",\"dialog_img\":\"DialogItem_dialog_img__Oe5Nw\",\"dialog_content\":\"DialogItem_dialog_content__oUi7g\",\"dialog_name\":\"DialogItem_dialog_name__nZCPE\",\"dialog_mess\":\"DialogItem_dialog_mess__4Vy+l\"};","import React from \"react\";\r\nimport c from \"./DialogItem.module.css\";\r\nimport pustoy from \"./../../../accets/images/pustoyprofile.jpg\"\r\nconst DialogItem = ({ src,mess, name, type }) => {\r\n  \r\n  return (\r\n    <div className={type?`${c.dialog_item} ${c.dialog_reverce}`:c.dialog_item}>\r\n      <div className={c.dialog_img}>\r\n        <img src={src?src:pustoy} alt=\"\" />\r\n      </div>\r\n      <div className={c.dialog_content}>\r\n        <p className={c.dialog_name}>{name}</p>\r\n        <p className={c.dialog_mess}>{mess}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DialogItem;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport c from \"./Message.module.css\";\r\nimport ContactItem from \"./ContactItem/ContactItem\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport FormForPost from \"../Common/form/formForPost\";\r\n\r\nconst Messages = ({ profilePhoto,userPhoto,isActive,setUserInfo,onSubmit,curentRef,messagesPage,addDialog,...props }) => {\r\n  \r\n  const contactlist =messagesPage.contacts&&messagesPage.contacts.map((contact) => (\r\n    <ContactItem\r\n    isActive={isActive}\r\n    setUserInfo={setUserInfo}\r\n    key={contact.id}\r\n      id={contact.id}\r\n      src={contact.photos.small}\r\n      name={contact.userName}\r\n    />\r\n  ));\r\n  const dialogList = messagesPage.dialogs&&messagesPage.dialogs.map((dialog) => {\r\n    let dialogItem;\r\n    if (dialog.senderId === 30535) {\r\n      dialogItem = (\r\n        <DialogItem\r\n        key={dialog.id}\r\n          id={dialog.id}\r\n          mess={dialog.body}\r\n          name={dialog.name}\r\n          type=\"main\"\r\n          src={profilePhoto?profilePhoto.photos.small:null}\r\n        />\r\n      );\r\n    } else\r\n      dialogItem = (\r\n        <DialogItem key={dialog.id} id={dialog.id} mess={dialog.body} name={dialog.name} src={userPhoto}/>\r\n      );\r\n    return dialogItem;\r\n  });\r\n\r\n  return (\r\n      <div className={c.container}>\r\n        <div className={c.body}>\r\n          <div className={c.contacts_list}>\r\n            {messagesPage.contacts&&messagesPage.contacts.lengts!==0\r\n            ?contactlist\r\n            :<div className={c.pustoyContact}>\r\n            <p>Нет контактов</p>\r\n          </div>\r\n        }\r\n        </div>\r\n          {/* <div ref={curentRef} className={c.dialog_list}>{dialogList}</div> */}\r\n          <div ref={curentRef} className={c.dialog_list}>\r\n            {messagesPage.dialogs&&messagesPage.dialogs.length!==0\r\n            ?dialogList\r\n            :<div className={c.pustoyMessage}>\r\n              <p>No active dialogues,\r\nselect dialogue on the left</p>\r\n            </div>\r\n          }\r\n          </div>\r\n        </div>\r\n        <div className={c.send_body}>\r\n          <div></div>\r\n          <div className={c.textarea}>\r\n            <FormForPost  addDialog={addDialog} onSubmit={onSubmit}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\nexport default Messages;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  addDialog,\r\n  getDialogUsers,\r\n  getMessagesFromUser,\r\n  postMessageToUser,\r\n  putStartDialogToFriend,\r\n} from \"../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nconst MessagesContainer=React.memo((props)=>{\r\n  let [isActive,setActive]=useState(null)\r\n  let [userPhoto,setUserPhoto]=useState(\"\")\r\n  let curentRef=React.createRef()\r\n  useEffect(()=>{\r\n    \r\n    let cur=curentRef.current\r\n    props.getDialogUsers()\r\n    cur.scrollTop = cur.scrollHeight;\r\n  },[])\r\n  const onSubmit=(formData)=>{\r\n    \r\n    props.postMessageToUser(formData.body,isActive)\r\n  }\r\n  const setUserInfo=(id,src)=>{\r\n    \r\n    props.putStartDialogToFriend(id)\r\n    setActive(id)\r\n    setUserPhoto(src)\r\n  }\r\n\r\n\r\n  return <Messages profilePhoto={props.profilePhoto} userPhoto={userPhoto} isActive={isActive} setUserInfo={setUserInfo} curentRef={curentRef} onSubmit={onSubmit} {...props}/>\r\n}\r\n)\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n    profilePhoto:state.profilePage.profile,\r\n\r\n  };\r\n};\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addDialog: (text) => {\r\n//       dispatch(add_dialog_actionCreator(text));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {addDialog,getDialogUsers,postMessageToUser,getMessagesFromUser,putStartDialogToFriend}),\r\n  withAuthRedirect\r\n)(MessagesContainer);\r\n"],"names":["_ref","id","src","name","shortdesctiption","setUserInfo","isActive","_jsxs","className","c","onClick","children","_jsx","pustoy","alt","mess","type","concat","profilePhoto","userPhoto","onSubmit","curentRef","messagesPage","addDialog","props","contactlist","contacts","map","contact","ContactItem","photos","small","userName","dialogList","dialogs","dialog","dialogItem","senderId","DialogItem","body","lengts","ref","length","FormForPost","MessagesContainer","React","setActive","useState","setUserPhoto","useEffect","cur","current","getDialogUsers","scrollTop","scrollHeight","Messages","putStartDialogToFriend","formData","postMessageToUser","compose","connect","state","profilePage","profile","getMessagesFromUser","withAuthRedirect"],"sourceRoot":""}